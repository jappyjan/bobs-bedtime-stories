service: backend-api-new

configValidationMode: error # remove in serverless v3
variablesResolutionMode: 20210326 # remove in serverless v3

plugins:
  - 'serverless-bundle'
  - serverless-offline
  - serverless-dynamodb-local


package:
  individually: true

custom:
  stage: ${opt:stage, 'dev'}
  serverless-offline:
    httpPort: 3333
    lambdaPort: 2333
    noPrependStageInUrl: true
  bundle:
    linting: false
    tsConfig: 'tsconfig.app.json'
  dynamodb:
    stages:
      - dev

provider:
  name: aws
  runtime: nodejs14.x
  stage: ${self:custom.stage}
  endpointType: regional
  timeout: 20
  lambdaHashingVersion: 20201221 # removes deprecation warning (remove in serverless v3)
  apiGateway:
    shouldStartNameWithService: true # removes deprecation warning (remove in serverless v3)
  environment:
    APP_ENV: ${self:custom.stage}
    IS_PRODUCTION: '${file(./src/environments/config.${self:custom.stage}.json):is_production}'
    NODE_OPTIONS: --enable-source-maps

functions:
  verifyPasscodePost:
    handler: src/handlers/verify-passcode.post.handler
    events:
      - http:
          method: POST
          path: /auth/verify-passcode

  booksGet:
    handler: src/handlers/books.get.handler
    events:
      - http:
          method: GET
          path: /books

  storiesGet:
    handler: src/handlers/stories.get.handler
    events:
      - http:
          method: GET
          path: /books/{bookSlug}/stories
          request:
            parameters:
              paths:
                bookSlug: true


resources: # CloudFormation template syntax
  Resources:
    booksTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: books
        AttributeDefinitions:
          - AttributeName: slug
            AttributeType: S
        KeySchema:
          - AttributeName: slug
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
    storiesTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: stories
        AttributeDefinitions:
          - AttributeName: bookSlug
            AttributeType: S
          - AttributeName: episode
            AttributeType: N
        KeySchema:
          - AttributeName: bookSlug
            KeyType: HASH
          - AttributeName: episode
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
