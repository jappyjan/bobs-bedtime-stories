{
  "Resources": {
    "ApiCertificateCertificateRequestorFunctionServiceRole86B3A678": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Backend/ApiCertificate/CertificateRequestorFunction/ServiceRole/Resource"
      }
    },
    "ApiCertificateCertificateRequestorFunctionServiceRoleDefaultPolicy37D02D57": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "acm:RequestCertificate",
                "acm:DescribeCertificate",
                "acm:DeleteCertificate",
                "acm:AddTagsToCertificate"
              ],
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": "route53:GetChange",
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": "route53:changeResourceRecordSets",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":route53:::hostedzone/Z09860133LATIXGX1YUOE"
                  ]
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "ApiCertificateCertificateRequestorFunctionServiceRoleDefaultPolicy37D02D57",
        "Roles": [
          {
            "Ref": "ApiCertificateCertificateRequestorFunctionServiceRole86B3A678"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Backend/ApiCertificate/CertificateRequestorFunction/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "ApiCertificateCertificateRequestorFunction35B7F4E7": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-372838162452-eu-central-1",
          "S3Key": "4d3f21fe611d8ebfd4f1f69754b7f986fed4ecf648d4fafe941cd81ede6cf60c.zip"
        },
        "Role": {
          "Fn::GetAtt": [
            "ApiCertificateCertificateRequestorFunctionServiceRole86B3A678",
            "Arn"
          ]
        },
        "Handler": "index.certificateRequestHandler",
        "Runtime": "nodejs12.x",
        "Timeout": 900
      },
      "DependsOn": [
        "ApiCertificateCertificateRequestorFunctionServiceRoleDefaultPolicy37D02D57",
        "ApiCertificateCertificateRequestorFunctionServiceRole86B3A678"
      ],
      "Metadata": {
        "aws:cdk:path": "Backend/ApiCertificate/CertificateRequestorFunction/Resource",
        "aws:asset:path": "asset.4d3f21fe611d8ebfd4f1f69754b7f986fed4ecf648d4fafe941cd81ede6cf60c",
        "aws:asset:is-bundled": false,
        "aws:asset:property": "Code"
      }
    },
    "ApiCertificateCertificateRequestorResource57CB3F69": {
      "Type": "AWS::CloudFormation::CustomResource",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "ApiCertificateCertificateRequestorFunction35B7F4E7",
            "Arn"
          ]
        },
        "DomainName": "api.bob-time-stories.de",
        "HostedZoneId": "Z09860133LATIXGX1YUOE",
        "Region": "eu-central-1"
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "Backend/ApiCertificate/CertificateRequestorResource/Default"
      }
    },
    "ApiDomainNameEB571102": {
      "Type": "AWS::ApiGatewayV2::DomainName",
      "Properties": {
        "DomainName": "api.bob-time-stories.de",
        "DomainNameConfigurations": [
          {
            "CertificateArn": {
              "Fn::GetAtt": [
                "ApiCertificateCertificateRequestorResource57CB3F69",
                "Arn"
              ]
            },
            "EndpointType": "REGIONAL"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Backend/ApiDomainName/Resource"
      }
    },
    "HttpApiF5A9A8A7": {
      "Type": "AWS::ApiGatewayV2::Api",
      "Properties": {
        "CorsConfiguration": {
          "AllowHeaders": [
            "*"
          ],
          "AllowMethods": [
            "*"
          ],
          "AllowOrigins": [
            "*"
          ],
          "MaxAge": 864000
        },
        "Name": "HttpApi",
        "ProtocolType": "HTTP"
      },
      "Metadata": {
        "aws:cdk:path": "Backend/HttpApi/Resource"
      }
    },
    "HttpApiDefaultStage3EEB07D6": {
      "Type": "AWS::ApiGatewayV2::Stage",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApiF5A9A8A7"
        },
        "StageName": "$default",
        "AutoDeploy": true
      },
      "DependsOn": [
        "ApiDomainNameEB571102"
      ],
      "Metadata": {
        "aws:cdk:path": "Backend/HttpApi/DefaultStage/Resource"
      }
    },
    "HttpApiDefaultStageBackendApiDomainNameundefined9CD3065F": {
      "Type": "AWS::ApiGatewayV2::ApiMapping",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApiF5A9A8A7"
        },
        "DomainName": {
          "Ref": "ApiDomainNameEB571102"
        },
        "Stage": "$default"
      },
      "DependsOn": [
        "ApiDomainNameEB571102",
        "HttpApiDefaultStage3EEB07D6"
      ],
      "Metadata": {
        "aws:cdk:path": "Backend/HttpApi/DefaultStage/Backend--ApiDomainNameundefined/Resource"
      }
    },
    "HttpApiGETbooksbackendapiintegrationPermissionC66E1C56": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "backendapiLambdaNestedStackbackendapiLambdaNestedStackResourceB7D17225",
            "Outputs.BackendbackendapiLambdabackendapiFunctionCD3A754FArn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:eu-central-1:372838162452:",
              {
                "Ref": "HttpApiF5A9A8A7"
              },
              "/*/*/books"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "Backend/HttpApi/GET--books/backend-api-integration-Permission"
      }
    },
    "HttpApiGETbooksbackendapiintegration5D94F3D8": {
      "Type": "AWS::ApiGatewayV2::Integration",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApiF5A9A8A7"
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::GetAtt": [
            "backendapiLambdaNestedStackbackendapiLambdaNestedStackResourceB7D17225",
            "Outputs.BackendbackendapiLambdabackendapiFunctionCD3A754FArn"
          ]
        },
        "PayloadFormatVersion": "2.0"
      },
      "Metadata": {
        "aws:cdk:path": "Backend/HttpApi/GET--books/backend-api-integration/Resource"
      }
    },
    "HttpApiGETbooksF1B941B8": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApiF5A9A8A7"
        },
        "RouteKey": "GET /books",
        "AuthorizationType": "NONE",
        "Target": {
          "Fn::Join": [
            "",
            [
              "integrations/",
              {
                "Ref": "HttpApiGETbooksbackendapiintegration5D94F3D8"
              }
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "Backend/HttpApi/GET--books/Resource"
      }
    },
    "HttpApiPOSTbooksB64769A0": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApiF5A9A8A7"
        },
        "RouteKey": "POST /books",
        "AuthorizationType": "NONE",
        "Target": {
          "Fn::Join": [
            "",
            [
              "integrations/",
              {
                "Ref": "HttpApiGETbooksbackendapiintegration5D94F3D8"
              }
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "Backend/HttpApi/POST--books/Resource"
      }
    },
    "HttpApiGETbooksbookSlugstories8A39DC43": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApiF5A9A8A7"
        },
        "RouteKey": "GET /books/{bookSlug}/stories",
        "AuthorizationType": "NONE",
        "Target": {
          "Fn::Join": [
            "",
            [
              "integrations/",
              {
                "Ref": "HttpApiGETbooksbackendapiintegration5D94F3D8"
              }
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "Backend/HttpApi/GET--books--{bookSlug}--stories/Resource"
      }
    },
    "HttpApiPOSTbooksbookSlugstories0E6B4D5A": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApiF5A9A8A7"
        },
        "RouteKey": "POST /books/{bookSlug}/stories",
        "AuthorizationType": "NONE",
        "Target": {
          "Fn::Join": [
            "",
            [
              "integrations/",
              {
                "Ref": "HttpApiGETbooksbackendapiintegration5D94F3D8"
              }
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "Backend/HttpApi/POST--books--{bookSlug}--stories/Resource"
      }
    },
    "HttpApiPOSTauthverifypasscode1B68309E": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApiF5A9A8A7"
        },
        "RouteKey": "POST /auth/verify-passcode",
        "AuthorizationType": "NONE",
        "Target": {
          "Fn::Join": [
            "",
            [
              "integrations/",
              {
                "Ref": "HttpApiGETbooksbackendapiintegration5D94F3D8"
              }
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "Backend/HttpApi/POST--auth--verify-passcode/Resource"
      }
    },
    "ApiDNSAlias01A50991": {
      "Type": "AWS::Route53::RecordSet",
      "Properties": {
        "Name": "api.bob-time-stories.de.",
        "Type": "A",
        "AliasTarget": {
          "DNSName": {
            "Fn::GetAtt": [
              "ApiDomainNameEB571102",
              "RegionalDomainName"
            ]
          },
          "HostedZoneId": {
            "Fn::GetAtt": [
              "ApiDomainNameEB571102",
              "RegionalHostedZoneId"
            ]
          }
        },
        "HostedZoneId": "Z09860133LATIXGX1YUOE"
      },
      "Metadata": {
        "aws:cdk:path": "Backend/ApiDNSAlias/Resource"
      }
    },
    "DynamoNestedStackDynamoNestedStackResourceF330840D": {
      "Type": "AWS::CloudFormation::Stack",
      "Properties": {
        "TemplateURL": {
          "Fn::Join": [
            "",
            [
              "https://s3.eu-central-1.",
              {
                "Ref": "AWS::URLSuffix"
              },
              "/cdk-hnb659fds-assets-372838162452-eu-central-1/6436ff69407a780ee865156def965ba98faa46d75083e24806878cb84b86c19c.json"
            ]
          ]
        }
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "Backend/Dynamo.NestedStack/Dynamo.NestedStackResource",
        "aws:asset:path": "BackendDynamo701DB23A.nested.template.json",
        "aws:asset:property": "TemplateURL"
      }
    },
    "SecretsNestedStackSecretsNestedStackResource20726466": {
      "Type": "AWS::CloudFormation::Stack",
      "Properties": {
        "TemplateURL": {
          "Fn::Join": [
            "",
            [
              "https://s3.eu-central-1.",
              {
                "Ref": "AWS::URLSuffix"
              },
              "/cdk-hnb659fds-assets-372838162452-eu-central-1/a8aa07e1a6a1c9f19705db84a1eec5e0ba93700474d5ad1d88d1b39e3719bb83.json"
            ]
          ]
        }
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "Backend/Secrets.NestedStack/Secrets.NestedStackResource",
        "aws:asset:path": "BackendSecretsAFAF6387.nested.template.json",
        "aws:asset:property": "TemplateURL"
      }
    },
    "S3NestedStackS3NestedStackResource225F67B9": {
      "Type": "AWS::CloudFormation::Stack",
      "Properties": {
        "TemplateURL": {
          "Fn::Join": [
            "",
            [
              "https://s3.eu-central-1.",
              {
                "Ref": "AWS::URLSuffix"
              },
              "/cdk-hnb659fds-assets-372838162452-eu-central-1/600c067aed33d04084d45bd290a0fd4ee334de92b26bc0b65086c406d6f3d10f.json"
            ]
          ]
        }
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "Backend/S3.NestedStack/S3.NestedStackResource",
        "aws:asset:path": "BackendS325BACAE9.nested.template.json",
        "aws:asset:property": "TemplateURL"
      }
    },
    "MainCDNNestedStackMainCDNNestedStackResource0E534585": {
      "Type": "AWS::CloudFormation::Stack",
      "Properties": {
        "TemplateURL": {
          "Fn::Join": [
            "",
            [
              "https://s3.eu-central-1.",
              {
                "Ref": "AWS::URLSuffix"
              },
              "/cdk-hnb659fds-assets-372838162452-eu-central-1/b978c5b144a10999c045aa1c84be6663b4ed5914de96834be3f8d2fac8e36743.json"
            ]
          ]
        },
        "Parameters": {
          "referencetoBackendS3NestedStackS3NestedStackResource0F879E2DOutputsBackendS3CDNBucket72166D65WebsiteURL": {
            "Fn::GetAtt": [
              "S3NestedStackS3NestedStackResource225F67B9",
              "Outputs.BackendS3CDNBucket72166D65WebsiteURL"
            ]
          }
        }
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "Backend/MainCDN.NestedStack/MainCDN.NestedStackResource",
        "aws:asset:path": "BackendMainCDN8B60AFAB.nested.template.json",
        "aws:asset:property": "TemplateURL"
      }
    },
    "backendapiLambdaNestedStackbackendapiLambdaNestedStackResourceB7D17225": {
      "Type": "AWS::CloudFormation::Stack",
      "Properties": {
        "TemplateURL": {
          "Fn::Join": [
            "",
            [
              "https://s3.eu-central-1.",
              {
                "Ref": "AWS::URLSuffix"
              },
              "/cdk-hnb659fds-assets-372838162452-eu-central-1/4df1d72cc19c468808626af39ec9476036af1243b0494e666994e921110a0add.json"
            ]
          ]
        },
        "Parameters": {
          "referencetoBackendDynamoNestedStackDynamoNestedStackResource6D09FF52OutputsBackendDynamobooksTable7901496AArn": {
            "Fn::GetAtt": [
              "DynamoNestedStackDynamoNestedStackResourceF330840D",
              "Outputs.BackendDynamobooksTable7901496AArn"
            ]
          },
          "referencetoBackendDynamoNestedStackDynamoNestedStackResource6D09FF52OutputsBackendDynamostoriesTable0251692AArn": {
            "Fn::GetAtt": [
              "DynamoNestedStackDynamoNestedStackResourceF330840D",
              "Outputs.BackendDynamostoriesTable0251692AArn"
            ]
          },
          "referencetoBackendDynamoNestedStackDynamoNestedStackResource6D09FF52OutputsBackendDynamobooksTable7901496ARef": {
            "Fn::GetAtt": [
              "DynamoNestedStackDynamoNestedStackResourceF330840D",
              "Outputs.BackendDynamobooksTable7901496ARef"
            ]
          },
          "referencetoBackendDynamoNestedStackDynamoNestedStackResource6D09FF52OutputsBackendDynamostoriesTable0251692ARef": {
            "Fn::GetAtt": [
              "DynamoNestedStackDynamoNestedStackResourceF330840D",
              "Outputs.BackendDynamostoriesTable0251692ARef"
            ]
          },
          "referencetoBackendS3NestedStackS3NestedStackResource0F879E2DOutputsBackendS3CDNBucket72166D65Ref": {
            "Fn::GetAtt": [
              "S3NestedStackS3NestedStackResource225F67B9",
              "Outputs.BackendS3CDNBucket72166D65Ref"
            ]
          }
        }
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "Backend/backend-api-Lambda.NestedStack/backend-api-Lambda.NestedStackResource",
        "aws:asset:path": "BackendbackendapiLambdaC9AAB687.nested.template.json",
        "aws:asset:property": "TemplateURL"
      }
    },
    "CDKMetadata": {
      "Type": "AWS::CDK::Metadata",
      "Properties": {
        "Analytics": "v2:deflate64:H4sIAAAAAAAA/01Qy27CMBD8Fu6OIaD2XCiq2kNbFKRe0eIsqUn8kL0GoSj/XttAyWlmd9brmZ3zcs772QTOvhB1W3Ryz/stgWhZhd4EJ5BFbdcLdCQPUgChAg0NOr7W/gc6WcdW/fqQWQdqXwPv34IWJI1mrwc95ht0Snofq4FJULyvTIdJyLgxnRSXPJfZwPxiB94jeb5MEGu+CqJFWoGP7qxs4q9nuJxikvhsbRRI/QUq71xamSBGau71J1grdZOqD03YOLg7q0wgHJhL8LTg/bJCYVydpcy2SMPAso20MW8Jnoz6P1YeffDvQDbQzYFoBzYroLO/wGeTl9vNpwnHKW4T/SjIO5FNSRJeo4xypGZ2ntkoUrSqTY386Ken8pmXC15Ojl7KwgVNUiGvrvgH0E9PBgUCAAA="
      },
      "Metadata": {
        "aws:cdk:path": "Backend/CDKMetadata/Default"
      }
    }
  },
  "Outputs": {
    "apiEndpoint": {
      "Value": "api.bob-time-stories.de"
    },
    "MainCDN": {
      "Value": "cdn.bob-time-stories.de"
    }
  },
  "Parameters": {
    "BootstrapVersion": {
      "Type": "AWS::SSM::Parameter::Value<String>",
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
    }
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5"
                  ],
                  {
                    "Ref": "BootstrapVersion"
                  }
                ]
              }
            ]
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
        }
      ]
    }
  }
}